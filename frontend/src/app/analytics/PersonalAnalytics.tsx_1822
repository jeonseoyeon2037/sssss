import { useEffect, useState } from 'react';
import { Line, Bar, Scatter } from 'react-chartjs-2';

// 타입 정의
type Stat = {
  date: string;
  completionRate: number;
};

type PersonalTask = {
  date: string;
  status: string;
  // 필요한 다른 필드들도 추가할 수 있습니다
};


type Grid = number[][];



export default function PersonalAnalytics() {

  const [chartData, setChartData] = useState<Stat[]>([]);



  const hourBlocks = ['08-10','10-12','12-14','14-16','16-18'];
  const days = ['월','화','수','목','금','토','일'];

  const [heatmap, setHeatmap] = useState<Grid>(
    Array(5).fill(null).map(() => Array(7).fill(0)) // 5x7 초기화
  );

  useEffect(() => {
    const fetchData = async () => {
      try {
        // Backend API에서 데이터 가져오기
        const response = await fetch('http://localhost:3001/api/personal-tasks');
        if (!response.ok) {
          throw new Error('Failed to fetch data');
        }
        
        const tasks: PersonalTask[] = await response.json();
        const stats: Record<string, { total: number; completed: number }> = {};

        // 데이터 처리
        tasks.forEach((task) => {
          const date = task.date;
          const status = task.status;

          if (!stats[date]) {
            stats[date] = { total: 0, completed: 0 };
          }

          stats[date].total += 1;
          if (status === 'completed') {
            stats[date].completed += 1;
          }
        });

        const result = Object.entries(stats).map(([date, val]) => ({
          date,
          completionRate: Number(((val.completed / val.total) * 100).toFixed(1))
        }));

        // 날짜순 정렬
        result.sort((a, b) => a.date.localeCompare(b.date));
        setChartData(result);
      } catch (error) {
        console.error('Error fetching data:', error);
        // 에러 처리 - 기본 데이터나 에러 메시지 표시
      }
    };

    fetchData();
  }, []);

  const data = {
    labels: chartData.map((d) => d.date),
    datasets: [
      {
        label: '이행률 (%)',
        data: chartData.map((d) => d.completionRate),
        borderColor: '#3b82f6',
        backgroundColor: 'rgba(59,130,246,0.1)',
        fill: true,
        tension: 0.4,
      }
    ]
  };

  const options = {
    plugins: {
      legend: { display: false }
    },
    scales: {
      y: { min: 0, max: 100, title: { display: true, text: '이행률(%)' } }
    },
    maintainAspectRatio: false,
  };

  
  return (
    <>
      {/* 3x3 그리드: 9개 개인 일정 분석 차트 */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-8">
        {/* 1. 일별 이행률 (선그래프) */}
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-blue-50 flex flex-col min-h-[300px]">
          <div className="font-semibold mb-3 text-[#22223b]">일별 이행률</div>
          <div className="flex-1 flex items-center">
            <Line data={data} options={options} />
          </div>
        </div>

        {/* 2. 요일×시간대 히트맵 (커스텀) */}
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-blue-50 flex flex-col">
          <div className="font-semibold mb-3 text-[#22223b]">요일×시간대 완료율</div>
          {/* 히트맵: 커스텀 렌더링 */}
          <div className="flex">
            <div className="flex flex-col justify-center mr-2">
              {['08-10','10-12','12-14','14-16','16-18'].map((block) => (
                <div key={block} className="h-9 flex items-center justify-end text-[#7b8794] text-sm" style={{height:36}}>{block}</div>
              ))}
            </div>
            <div className="flex flex-col">
              {[[80,70,60,50,40,30,20],[75,85,65,55,45,35,25],[90,80,70,60,50,40,30],[85,75,65,55,45,35,25],[70,60,50,40,30,20,10]].map((row,i) => (
                <div key={i} className="flex mb-1 last:mb-0">
                  {row.map((val,j) => {
                    let color = 'bg-blue-50';
                    if(val>=80) color='bg-blue-700';
                    else if(val>=70) color='bg-blue-500';
                    else if(val>=60) color='bg-blue-300';
                    else if(val>=50) color='bg-blue-100';
                    return <div key={j} className={`rounded-lg ${color}`} style={{width:36,height:36,marginRight:j<row.length-1?8:0}}><span className="text-xs text-white font-bold flex items-center justify-center h-full w-full">{val}</span></div>;
                  })}
                </div>
              ))}
            </div>
          </div>
          <div className="flex mt-3 ml-12">
            {['월','화','수','목','금','토','일'].map((label,idx) => (
              <div key={label+idx} className="w-9 text-center text-[#7b8794] text-sm" style={{width:36,marginRight:idx<6?8:0}}>{label}</div>
            ))}
          </div>
        </div>

        {/* 3. 태그별 완료율 (막대그래프) */}
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-blue-50 flex flex-col">
          <div className="font-semibold mb-3 text-[#22223b]">태그별 완료율</div>
          <Bar
            data={{
              labels: ['업무','회의','개인','기타'],
              datasets: [{
                label: '완료율(%)',
                data: [85, 70, 90, 60],
                backgroundColor: ['#3b82f6','#f59e42','#10b981','#6366f1'],
              }],
            }}
            options={{
              plugins: { legend: { display: false } },
              scales: { y: { min: 0, max: 100, title: { display: true, text: '완료율(%)' } } },
            }}
            height={180}
          />
        </div>
        {/* 4. 소요시간 히스토그램 */}
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-blue-50 flex flex-col">
          <div className="font-semibold mb-3 text-[#22223b]">소요시간 분포</div>
          {/* 히스토그램: 막대그래프로 대체 */}
          <Bar
            data={{
              labels: ['0~30','30~60','60~90','90~120','120~150','150~180'],
              datasets: [{
                label: '건수',
                data: [5, 12, 18, 9, 4, 2],
                backgroundColor: '#6366f1',
              }],
            }}
            options={{
              plugins: { legend: { display: false } },
              scales: { y: { beginAtZero: true, title: { display: true, text: '건수' } } },
            }}
            height={180}
          />
        </div>
        {/* 5. 소요시간 vs 감정 (산점도) */}
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-blue-50 flex flex-col">
          <div className="font-semibold mb-3 text-[#22223b]">소요시간 vs 감정</div>
          <Scatter
            data={{
              datasets: [
                { label: '업무', data: [ {x:30,y:4},{x:60,y:3.5},{x:90,y:3},{x:120,y:2.5},{x:150,y:2} ], backgroundColor:'#3b82f6' },
                { label: '회의', data: [ {x:30,y:4.2},{x:60,y:3.8},{x:90,y:3.2},{x:120,y:2.8},{x:150,y:2.3} ], backgroundColor:'#f59e42' },
              ]
            }}
            options={{
              plugins: { legend: { position: 'top' } },
              scales: {
                x: { title: { display: true, text: '소요시간(분)' } },
                y: { min: 0, max: 5, title: { display: true, text: '감정점수' } },
              },
            }}
            height={180}
          />
        </div>
        {/* 6. 태그별 소요시간 (박스플롯: 바형태로 대체) */}
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-blue-50 flex flex-col">
          <div className="font-semibold mb-3 text-[#22223b]">태그별 소요시간</div>
          <Bar
            data={{
              labels: ['업무','회의','개인','기타'],
              datasets: [
                { label: '최소', data: [30,20,25,15], backgroundColor:'#dbeafe' },
                { label: '평균', data: [60,50,55,40], backgroundColor:'#3b82f6' },
                { label: '최대', data: [120,90,100,80], backgroundColor:'#1e40af' },
              ]
            }}
            options={{
              plugins: { legend: { position: 'bottom' } },
              scales: { y: { beginAtZero: true, title: { display: true, text: '소요시간(분)' } } },
            }}
            height={180}
          />
        </div>
        {/* 7. 상태 파이차트 */}
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-blue-50 flex flex-col items-center">
          <div className="font-semibold mb-3 text-[#22223b]">상태 비율</div>
          <div className="w-full flex justify-center">
            <Bar
              data={{
                labels: ['완료','지연','미이행'],
                datasets: [{
                  label: '비율(%)',
                  data: [70, 20, 10],
                  backgroundColor: ['#10b981','#f59e42','#f87171'],
                }],
              }}
              options={{
                plugins: { legend: { display: false } },
                indexAxis: 'y',
                scales: { x: { min: 0, max: 100, title: { display: true, text: '비율(%)' } } },
              }}
              height={120}
            />
          </div>
        </div>
        {/* 8. 누적 완료 영역차트 (Line+fill) */}
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-blue-50 flex flex-col">
          <div className="font-semibold mb-3 text-[#22223b]">누적 완료 추이</div>
          <Line
            data={{
              labels: ['2024-06-01','2024-06-02','2024-06-03','2024-06-04','2024-06-05','2024-06-06','2024-06-07'],
              datasets: [{
                label: '누적 완료',
                data: [5, 12, 20, 28, 35, 40, 50],
                borderColor: '#10b981',
                backgroundColor: 'rgba(16,185,129,0.2)',
                fill: true,
                tension: 0.4,
              }],
            }}
            options={{
              plugins: { legend: { display: false } },
              scales: { y: { beginAtZero: true, title: { display: true, text: '누적 완료' } } },
            }}
            height={180}
          />
        </div>
        {/* 9. 시간대별 집중도 (면적그래프) */}
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-blue-50 flex flex-col">
          <div className="font-semibold mb-3 text-[#22223b]">시간대별 집중도</div>
          <Line
            data={{
              labels: ['08','09','10','11','12','13','14','15','16','17','18'],
              datasets: [{
                label: '일정 건수',
                data: [2, 4, 7, 10, 8, 6, 5, 7, 9, 6, 3],
                borderColor: '#f59e42',
                backgroundColor: 'rgba(245,158,66,0.2)',
                fill: true,
                tension: 0.4,
              }],
            }}
            options={{
              plugins: { legend: { display: false } },
              scales: { y: { beginAtZero: true, title: { display: true, text: '일정 건수' } } },
            }}
            height={180}
          />
        </div>
      </div>
    </>
  );
} 